* View file inside a jar 
  : jar tvf <jar-file> | grep <string-of-filename>
  : unzip -p <jar-file> <filename> | less
* Check services on CentOS
  : sudo chkconfig
  : systemctl list-units --all

* ip command
  Essential: http://packetpushers.net/linux-ip-command-ostensive-definition/
  https://www.tecmint.com/ip-command-examples/
  http://baturin.org/docs/iproute2/

* Bash renaming:
** Using rename command:
   : rename 's/test-this/REPLACESTRING/g' *
   will rename
   : test-this.01.ext
   : test-this.02.ext 
   to
   : REPLACESTRING.01.ext
   : REPLACESTRING.02.ext

   From: https://stackoverflow.com/questions/20657432/bash-rename-multiple-files-but-only-rename-part-of-the-filename

** Using wildcards with mv command 
   From: https://ubuntuforums.org/showthread.php?t=1164748
  #+BEGIN_EXAMPLE
  in BASH scripting

$file is the abbreviated form of variable reference
${file} is the full formal way
${file%string} is a way of saying "$file" but leave string off of the end
${file#string} is a way of saying "$file" but leave string off of the beginning

the % and # become much more powerful when you realize that string can contain wildcards:
${file%.*} is like "take off the extension"

if you double up on % or # it makes the wildcard "greedy":
if $file is "my.archive.tar.gz",
${file%.*} will shorten it to "my.archive.tar"
${file%%.*} will shorten it to "my"
${file#*.} will shorten it to "archive.tar.gz"
${file##*.} will shorten it to "gz"

It is important to remember that shells are text-processing powerhouses -
numbers not so much.
  #+END_EXAMPLE

* Sed simple replace string
  sed -i -e 's/old/new/g' hello.txt
  -i option is used to edit in place on the file hello.txt.
  -e option indicates the expression/command to run, in this case s/.

  https://unix.stackexchange.com/questions/159367/using-sed-to-find-and-replace

* Know the creation time of a file/directory:
  http://unix.stackexchange.com/questions/24441/get-file-created-creation-time
  http://unix.stackexchange.com/questions/50177/birth-is-empty-on-ext4/50184#50184
  #+BEGIN_SRC shell
    # Get device in /dev :
    [root@iop-smip-sm2m-nfs core]# df -h .
    Filesystem            Size  Used Avail Use% Mounted on
    /dev/mapper/vg_iopsmipsm2mnfs-lv_home
                          144G   93M  136G   1% /NFS

    # Get the inode of file/dir :
    [root@iop-smip-sm2m-nfs core]# stat -c %i reports/
    4456479

    # Get the info with debugfs
    [root@iop-smip-sm2m-nfs core]# debugfs -R 'stat <4456479>' /dev/mapper/vg_iopsmipsm2mnfs-lv_home
    debugfs 1.41.12 (17-May-2010)
    Inode: 4456479   Type: directory    Mode:  0775   Flags: 0x80000
    Generation: 352045172    Version: 0x00000000:00000004
    User:   501   Group:   501   Size: 4096
    File ACL: 0    Directory ACL: 0
    Links: 5   Blockcount: 8
    Fragment:  Address: 0    Number: 0    Size: 0
     ctime: 0x58809adf:24d9ba3c -- Thu Jan 19 11:54:23 2017
     atime: 0x58947ec4:004067f0 -- Fri Feb  3 13:59:48 2017
     mtime: 0x58809adf:24d9ba3c -- Thu Jan 19 11:54:23 2017
    crtime: 0x579779d1:e4d1f580 -- Tue Jul 26 16:55:13 2016
    Size of extra inode fields: 28
    Extended attributes stored in inode body: 
      selinux = "system_u:object_r:home_root_t:s0\000" (33)
    EXTENTS:
    (0): 17834037
    [root@iop-smip-sm2m-nfs core]#   
  #+END_SRC

* Measure size of directories
  du -csm * | sort -n # --block-size=1M
  du -h -d 1 | sort -n

* rsync
  #+BEGIN_EXAMPLE
  23/11/15 14:21:13 | rsync -LvzP sogadm@10.95.183.190:/var/sog/pgngn/CRH1091367-R5A.zip .
  27/04/16 19:37:16 | rsync vm-Windows7/ /media/etomort/WD_DISK/
  27/04/16 19:37:44 | rsync -a  vm-Windows7/ /media/etomort/WD_DISK/
  24/06/16 00:42:14 | rsync -v es_windows_7_professional_n_with_sp1_x64_dvd_u_677144.iso  manager@54.76.253.178:/home/manager/
  24/06/16 20:24:50 | rsync -vhP --progress es_windows_7_professional_n_with_sp1_x64_dvd_u_677144.iso  manager@54.76.253.178:/home/manager/
  12/08/16 14:50:03 | rsync -vhP --progress sysadmin@smip-sm2m-rpm:/var/www/html/smip/portal/R7/m2m-kermit-2.6.0_1267-759b83bf.noarch.rpm .  
  #+END_EXAMPLE

* Find what package a file belongs to in Linux
** Ubuntu/Debian
   - If the file is already present
     : dpkg -S /usr/bin/ls

   - If not present
     : apt-file search /path/to/file
     : apt-file search filename

   https://superuser.com/questions/10997/find-what-package-a-file-belongs-to-in-ubuntu-debian

** RedHat/Fedora/CentOS
   - If the file is already present
     : rpm -qf /bin/ls

   - If not present
     : yum whatprovides
     
   http://stackoverflow.com/questions/1133495/how-do-i-find-which-rpm-package-supplies-a-file-im-looking-for

* Pidgin chats
  #+BEGIN_EXAMPLE
  cd ~/.purple/logs/sipe/tomas.orti.martin@ericsson.com%2cericsson%5cetomort/
  los directorios tienen los nombres con los que se ha chateado
  y los de varios, llevan el sufijo #1, #2, etc...
  Si me apuras, casi mejor que el de Skype, pq se puede hacer grep, awk, sed, etc...
  #+END_EXAMPLE

* Grep Recursive with file wildcard
  https://www.cyberciti.biz/faq/unix-linux-grep-include-file-pattern-recursive-example/
  These examples worked for me providing a wildcard for files:
  : grep -rHn --include="*.org" "use find" /home/etomort/myconf
  : grep -rHn --include="*.org" -e "use find" /home/etomort/myconf
  According to the man page:
  : grep [OPTIONS] PATTERN [FILE...]
  : grep [OPTIONS] [-e PATTERN | -f FILE] [FILE...]
  : I think FILE can be just a filename or directory name or *
  So these ones did not work (get nothing):
  : grep -rHn -e "use find" *.org
  : grep -rHn "use find" *.org
  These ones get matches but do not filter by file wildcard:
  : grep -rHn -e "use find" *  # Executed from /home/etomort/myconf
  : grep -rHn -e "use find" /home/etomort/myconf/
* find . -exec grep {} \; vs +
  https://unix.stackexchange.com/a/12904/30951
  - find will execute grep and will substitute {} with the filename(s) found.
  - The difference between ; and + is that with ; a single grep command for each file is executed.
  - Whereas with + as many files as possible are given as parameters to grep at once.
  #+END_EXAMPLE
* Capture gif file with byzanz
  byzanz-record --class="Slack" -d 5 -x 772 -y 443 -w 134 -h 106 -v xx.gif

** To know the cursor position use:
   xdotool getmouselocation
   x:772 y:443 screen:0 window:77594629
